---
include:
  - remote: 'https://gitlab.com/op_so/projects/gitlab-ci-templates/-/raw/main/templates/lint.gitlab-ci.yml'
  - remote: 'https://gitlab.com/op_so/projects/gitlab-ci-templates/-/raw/main/templates/gitlab-release.gitlab-ci.yml'

variables:
  IMAGE_NODE: node:22-bookworm
  IMAGE_NODE_GL_RELEASE: jfxs/commitizen-semantic-release:latest

stages:
  - lint
  - version
  - tests
  - build
  - gitlab-release

.snippets:
  version:
    - VERSION=$(cat .VERSION)
    - echo "VERSION>${VERSION}<"

version:
  image: $IMAGE_NODE_GL_RELEASE
  stage: version
  script:
    - npx semantic-release --dry-run --no-ci
    - if [ -s .VERSION ]; then cat .VERSION; else echo "0.0.0" > .VERSION; fi
    - !reference [.snippets, version]
  artifacts:
    paths:
      - .VERSION
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push"'

tests:
  image: $IMAGE_NODE
  stage: tests
  before_script:
    - npm install
  script:
    - npm run test
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push"'

build:
  image: $IMAGE_NODE
  stage: build
  dependencies:
    - version
  before_script:
    - !reference [.snippets, version]
    - npm install
    - npm install vsce
    - mkdir -p build
  script:
    - sed -i.bu "s/0\.0\.0/${VERSION}/g" package.json
    - npm run package
    - node_modules/.bin/vsce package --out build/vscode-central-remote-config-${VERSION}.vsix
  artifacts:
    paths:
      - build/
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push"'

gitlab-release:
  dependencies:
    - build
