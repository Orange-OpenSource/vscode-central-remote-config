---
include:
  - remote: 'https://gitlab.com/op_so/projects/gitlab-ci-templates/-/raw/main/templates/lint.gitlab-ci.yml'
  - remote: 'https://gitlab.com/op_so/projects/gitlab-ci-templates/-/raw/main/templates/gitlab-release.gitlab-ci.yml'

variables:
  IMAGE_NODE: node:22-bookworm
  IMAGE_NODE_GL_RELEASE: jfxs/commitizen-semantic-release:latest
  OS_REPOSITORY_URL: https://github.com/Orange-OpenSource/vscode-central-remote-config

stages:
  - lint
  - version
  - build
  - gitlab-release

.snippets:
  version:
    - VERSION=$(cat .VERSION)
    - echo "VERSION>${VERSION}<"

version:
  image: $IMAGE_NODE_GL_RELEASE
  stage: version
  script:
    - |
      if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        sed -i.bu "s|__REPOSITORY_URL__|${CI_PROJECT_URL}|g" package.json
        npx semantic-release --dry-run --no-ci
      fi
    - if [ -s .VERSION ]; then cat .VERSION; else echo "0.0.0" > .VERSION; fi
    - !reference [.snippets, version]
  artifacts:
    paths:
      - .VERSION
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_COMMIT_BRANCH || $CI_MERGE_REQUEST_IID'

build:
  image: $IMAGE_NODE
  stage: build
  dependencies:
    - version
  before_script:
    - !reference [.snippets, version]
    - npm install
    - npm install vsce
    - mkdir -p build
  script:
    - sed -i.bu "s/0\.0\.0/${VERSION}/g" package.json
    - sed -i.bu "s|__REPOSITORY_URL__|${OS_REPOSITORY_URL}|g" package.json
    - npm run package
    - node_modules/.bin/vsce package --out build/vscode-central-remote-config-${VERSION}.vsix
  artifacts:
    paths:
      - build/
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_COMMIT_BRANCH || $CI_MERGE_REQUEST_IID'

gitlab-release:
  dependencies:
    - build
  before_script:
    - sed -i.bu "s|__REPOSITORY_URL__|${CI_PROJECT_URL}|g" package.json
